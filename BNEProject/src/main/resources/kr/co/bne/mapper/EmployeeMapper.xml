<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.bne.mapper.Employee">

	<select id="selectEmployee" parameterType="String" resultType="Employee">
   <![CDATA[select e.*, d.department_name,
        			CASE when d.department_id = 0 then 'admin'
              		WHEN employee_id in (select manager_id from department) THEN 'manager'
              		ELSE 'employee' END position 
			from employee e, department d 
			where e.DEPARTMENT_ID = d.DEPARTMENT_ID
        			and employee_id = #{value}]]>
   </select>

	<update id="updatePassword" parameterType="HashMap">
	<![CDATA[update employee set password=#{password} where employee_id=#{id}]]>
	</update>
	
	<update id="updateFile" parameterType="HashMap">
	<![CDATA[update employee set file_position=#{filePosition} where employee_id=#{id}]]>
	</update>

	<update id="defaultUpdateFile" parameterType="String">
	<![CDATA[update employee set file_position='default.png' where employee_id=#{value}]]>
	</update>

	<select id="selectImage" resultType="Employee">
	<![CDATA[select employee_name,file_position from employee where employee_id='1'	]]>
	</select>
	
	<select id="empSearch" parameterType="String" resultType="Employee">
		<![CDATA[
		    select EMPLOYEE_ID,EMPLOYEE_NAME,DEPARTMENT_ID,mobile_phone,email,file_position
			from employee
			where EMPLOYEE_NAME like #{value}
			order by 2	]]>
	</select>

	<select id="selectTeamMember" resultType="Employee" parameterType="Integer">
	<![CDATA[select employee_name,employee_id from employee where department_id=#{values}]]>
	</select>
	
	
	<select id="selectTeamMember_menu" resultType="Employee" parameterType="String">
		select employee_id, employee_name
		from employee
		where department_id = (select department_id 
		                       from employee 
		                       where employee_id = #{value})
		      and employee_id not in ((select manager_id 
		                              from department 
		                              where department_id = (select department_id 
		                                                     from employee 
		                                                     where employee_id=#{value})), #{value})
	</select>
	
	<select id="selectDeptMember" parameterType="Integer" resultType="Employee">
	    select e.*, d.department_name,
        			CASE WHEN employee_id in (select manager_id from department) THEN 'manager'
              		ELSE 'employee' END position 
			from employee e, department d 
			where e.DEPARTMENT_ID = d.DEPARTMENT_ID
        			and e.department_id =#{departmentId} order by position desc , employee_name
	</select>
	
</mapper>